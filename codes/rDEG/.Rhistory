setwd("C:/Users/TaehyeongKim/Downloads/GAN-WGCNA/codes/rDEG")
setwd("C:/Users/TaehyeongKim/Downloads/GAN-WGCNA/codes/rDEG")
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("annoted_averaged_gex_lv-", region, ".csv") , header = TRUE, row.names = 1)
counts
total_mapped = colSums(counts)
snames <- colnames(counts) # Sample names
snames
trt  <- substr(snames, 5, 7)
# ch  <- substr(snames, 11, 11)
group <- interaction(trt)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
cont.matrix <- makeContrasts(emd=groupemd-groupely,
lmd=grouplmd-groupely,
lte=grouplte-groupely,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
#     write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
# DATASETS_PATH = paste("Datasets-",format(Sys.time(), "%Y%m%d/"), sep="")
RESULT_PATH = "Results-tmp/" # paste("Results/",format(Sys.time(), "%Y%m%d/"), sep="")
dir.create(RESULT_PATH)
for( region in c("VTA","CPU","PFC","HIP","NAC","BLA") ){
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("annoted_averaged_gex_lv-", region, ".csv") , header = TRUE, row.names = 1)
# annoted_averaged_gex_lv-%s.csv
# counts <- read.csv( paste("rescued_gex_lv-", region, ".csv", sep="") , header = TRUE, row.names = 1)
# geneLengths <- read.csv("DATASETS/geneLengths.csv",header = TRUE)
total_mapped = colSums(counts)
# RPKM_counts = rpkm(counts, geneLengths$length, lib.size=total_mapped) # Get RPKM
snames <- colnames(counts) # Sample names
snames
trt  <- substr(snames, 5, 7)
# ch  <- substr(snames, 11, 11)
group <- interaction(trt)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#design
cont.matrix <- makeContrasts(emd=groupemd-groupely,
lmd=grouplmd-groupely,
lte=grouplte-groupely,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
#     write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
}
trt
ch  <- substr(snames, 11, 11)
ch
snames
trt  <- substr(snames, 1, 3
)
trt
# trt  <- substr(snames, 5, 7)
trt  <- substr(snames, 1, 3)
# ch  <- substr(snames, 11, 11)
group <- interaction(trt)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
cont.matrix <- makeContrasts(emd=groupemd-groupely,
lmd=grouplmd-groupely,
lte=grouplte-groupely,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
#     write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
fit<-lmFit(voom,design)
region = "VTA"
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("annoted_averaged_gex_lv-", region, ".csv") , header = TRUE, row.names = 1)
total_mapped = colSums(counts)
snames <- colnames(counts) # Sample names
snames
# trt  <- substr(snames, 5, 7)
trt  <- substr(snames, 1, 3)
# ch  <- substr(snames, 11, 11)
group <- interaction(trt)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
cont.matrix <- makeContrasts(emd=groupemd-groupely,
lmd=grouplmd-groupely,
lte=grouplte-groupely,
levels=design)
coefficients=colnames(cont.matrix)
coefficients
conditions = c("con", "trt")
conditions <- factor(VTA_metatab$group)
design <- model.matrix(~0+group,VTA_metatab)
library(edgeR)
library(biomaRt)
# DATASETS_PATH = paste("Datasets-",format(Sys.time(), "%Y%m%d/"), sep="")
RESULT_PATH = paste("Results-",format(Sys.time(), "%Y%m%d/"), sep="")
dir.create(RESULT_PATH)
for( region in c("VTA","CPU","PFC","HIP","NAC","BLA") ){
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("0826_", region, "_sample_maintained_profile_annot.csv") , header = TRUE, row.names = 1)
# annoted_averaged_gex_lv-%s.csv
# counts <- read.csv( paste("rescued_gex_lv-", region, ".csv", sep="") , header = TRUE, row.names = 1)
# geneLengths <- read.csv("DATASETS/geneLengths.csv",header = TRUE)
total_mapped = colSums(counts)
# RPKM_counts = rpkm(counts, geneLengths$length, lib.size=total_mapped) # Get RPKM
snames <- colnames(counts) # Sample names
snames
# sim  <- substr(snames, 2, 3)
time  <- substr(snames, 5, 8)
group <- interaction(sim, time)
group <- interaction(time)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#design
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
}
sim  <- substr(snames, 2, 3)
time  <- substr(snames, 5, 8)
group <- interaction(sim, time)
group <- interaction(time)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
region = "VTA"
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("0826_", region, "_sample_maintained_profile_annot.csv") , header = TRUE, row.names = 1)
total_mapped = colSums(counts)
snames <- colnames(counts) # Sample names
snames
sim  <- substr(snames, 2, 3)
time  <- substr(snames, 5, 8)
group <- interaction(sim, time)
group <- interaction(time)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
.fit<-lmFit(voom,design)
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
length(coefficients)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
contrasts = append(contrasts, "Z")
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
cont.matrix <- makeContrasts(contrasts=contrasts,#"group99-group00",
levels=design)
sim
snames
snames <- colnames(counts) # Sample names
snames
sim  <- substr(snames, 2, 3)
time  <- substr(snames, 5, 8)
group <- interaction(sim, time)
group <- interaction(time)
conditions = group
conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
contrasts = append(contrasts, "Z")
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
contrasts = append(contrasts, "Z")
for (i in 1:99) {
contrasts = append(contrasts, "Z")
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
fit<-lmFit(voom,design)
sim
time
group
cont.matrix <- makeContrasts(contrasts=group,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
region = "VTA"
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("0826_", region, "_sample_maintained_profile_annot.csv") , header = TRUE, row.names = 1)
total_mapped = colSums(counts)
snames <- colnames(counts) # Sample names
snames
sim  <- substr(snames, 2, 3)
time  <- substr(snames, 5, 8)
group <- interaction(sim, time)
group <- interaction(time)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts=group,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
cont.matrix <- makeContrasts(contrasts=design,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
region = "VTA"
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("0826_", region, "_sample_maintained_profile_annot.csv") , header = TRUE, row.names = 1)
total_mapped = colSums(counts)
snames <- colnames(counts) # Sample names
snames
sim  <- substr(snames, 2, 3)
time  <- substr(snames, 5, 8)
group <- interaction(sim, time)
group <- interaction(time)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts=design,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for( region in c("VTA","CPU","PFC","HIP","NAC","BLA") ){
# region = "VTA"
# counts <- read.csv(paste0("../data/0921/0825_", region, "_sample_averaged_profile.csv") , header = TRUE, row.names = 1)
counts <- read.csv(paste0("0826_", region, "_sample_maintained_profile_annot.csv") , header = TRUE, row.names = 1)
# annoted_averaged_gex_lv-%s.csv
# counts <- read.csv( paste("rescued_gex_lv-", region, ".csv", sep="") , header = TRUE, row.names = 1)
# geneLengths <- read.csv("DATASETS/geneLengths.csv",header = TRUE)
total_mapped = colSums(counts)
# RPKM_counts = rpkm(counts, geneLengths$length, lib.size=total_mapped) # Get RPKM
snames <- colnames(counts) # Sample names
snames
sim  <- substr(snames, 2, 3)
time  <- substr(snames, 5, 8)
group <- interaction(sim, time)
group <- interaction(time)
conditions = group
# conditions = c("con", "trt")
group = conditions
# conditions <- factor(VTA_metatab$group)#factor out the group: it enables to find automatically which group belongs to
test.expression = data.frame(matrix(NA, nrow=nrow(counts), ncol=0))
# counts = counts[filtered.rownames,]
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#design
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
contrasts = append(contrasts, "Z")
for (i in 1:99) {
}
cont.matrix <- makeContrasts(contrasts="group99-group00",
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
write.csv(voom, paste(RESULT_PATH, "rescued_voom_result_", region, ".csv",sep=""))
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
}
group
time
design
contrasts
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
for (i in 1:99) {
contrasts = append(contrasts, paste0(i, "-0"))
}
contrasts
cont.matrix <- makeContrasts(contrasts=contrasts,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
# counts = counts[filtered.rownames,]
counts[counts < 0] == 0
# counts = counts[filtered.rownames,]
counts[counts < 0] <- 0
counts.mat <- as.matrix(counts)
# design <- model.matrix(~0+group,VTA_metatab)
design <- model.matrix(~0+group)
#cont.matrix <- makeContrasts(deg=group99-group00, levels=design)
contrasts = c()
for (i in 1:99) {
contrasts = append(contrasts, paste0(i, "-0"))
}
cont.matrix <- makeContrasts(contrasts=contrasts,
levels=design)
voom<-voom(counts.mat,design,plot=TRUE)
fit<-lmFit(voom,design)
vfit <- contrasts.fit(fit, cont.matrix)
efit <- eBayes(vfit)
plotSA(efit)
coefficients=colnames(cont.matrix)
summarytab <- data.frame()
for (i in 1:length(coefficients)) {
tab <- topTable(efit, number=length(row.names(counts.mat)), coef=i, adjust="BH")
# tab <- merge(tab, gene_id_DB, by.x=0, by.y=0)
# names(tab)[1]="gene_id"
filename = paste(RESULT_PATH, region,"_rescued_",coefficients[i],".csv",sep="")
write.table(tab,filename,quote=F,sep = "\t", row.names = T, col.names = T)
}
